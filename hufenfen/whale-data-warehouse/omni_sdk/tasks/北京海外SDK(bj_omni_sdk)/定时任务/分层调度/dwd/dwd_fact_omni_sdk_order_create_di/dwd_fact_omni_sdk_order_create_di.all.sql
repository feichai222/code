-- Generated by HiveQL Generator, please don't modify.
-- https://git.shiyou.kingsoft.com/data/hiveql-generator
-- 从OmniSDK 上报事件表 dw_omni_sdk.ods_omni_sdk_event_di 向  OmniSDK 订单创建事实表 dw_omni_sdk.dwd_fact_omni_sdk_order_create_di 提取数据

-- 使用动态分区
SET hive.exec.dynamic.partition.mode = nonstrict;
SET hive.exec.max.dynamic.partitions.pernode = 400;
SET hive.exec.max.dynamic.partitions = 400;

-- 变量
<#-- 定义日期格式和变量 -->
<#setting date_format="yyyy-MM-dd">
<#assign startDate = '2021-10-21'>
<#assign endDate = .now?date?iso_local>

<#-- 单次执行的天数, 最大 400 不能修改 -->
<#assign batchDays = 400>

<#-- 计算需要进行几次循环 -->
<#assign dayDiff = DateUtil.dayDiff(startDate?date, endDate?date)>
<#assign iterTimes = (dayDiff/batchDays)?int>
<#-- 如果向下取整之后变小了, 说明没有整除, 需要加一 -->
<#if iterTimes < dayDiff/batchDays>
<#assign iterTimes = iterTimes + 1>
</#if>

<#-- 开始循环 -->
<#list 1..iterTimes as index>
<#assign iterStartDate = DateUtil.addDays(startDate?string, (index - 1) * batchDays)>
<#assign iterEndDate = DateUtil.addDays(startDate?string, index * batchDays)>
<#-- 只要不是循环的最后一次, 都需要对结尾的日期减一 -->
<#if !index?is_last>
<#assign iterEndDate = DateUtil.addDays(startDate?string, index * batchDays - 1)>
</#if>
<#-- 循环内的结束日期不能超过循环外的结尾日期 -->
<#if iterEndDate?date gt endDate?date>
<#assign iterEndDate = endDate?date>
</#if>

WITH rs_get_json_object AS(
    SELECT
        ods_omni_sdk_event_di.dt,
        raw_json_view.*,
        properties_view.*
        FROM dw_omni_sdk.ods_omni_sdk_event_di --
        lateral VIEW json_tuple(
        raw_json,
        "#account_id",
        "#datasource",
        "#event_name",
        "#properties",
        "#time_ms"
        ) raw_json_view AS
        account_id,
        datasource,
        event_name,
        properties,
        time_ms
        lateral VIEW json_tuple(
        properties,
        "amount",
        "android",
        "another_device_id",
        "#channel",
        "city",
        "country",
        "country_region_name",
        "currency_code",
        "desktop",
        "#device_id",
        "#device_model",
        "#event_group",
        "game_id",
        "host",
        "http_version",
        "ios",
        "#ip",
        "#latitude",
        "#longitude",
        "mobile",
        "#msg_version",
        "notify_url",
        "order_id",
        "#os",
        "#os_version",
        "#role_id",
        "#sdk_version",
        "#service_group",
        "smarttv",
        "tablet",
        "time_zone",
        "#vendor"
        ) properties_view AS
        amount,
        android,
        another_device_id,
        channel,
        city,
        country,
        country_region_name,
        currency_code,
        desktop,
        device_id,
        device_model,
        event_group,
        game_id,
        host,
        http_version,
        ios,
        ip,
        latitude,
        longitude,
        mobile,
        msg_version,
        notify_url,
        order_id,
        os,
        os_version,
        role_id,
        sdk_version,
        service_group,
        smarttv,
        tablet,
        time_zone,
        vendor
       WHERE dt BETWEEN '${iterStartDate}' AND '${iterEndDate}'
          AND event_name = 'create_order'
),
rs_get_rank AS (
    SELECT *
    FROM (
            SELECT *,
                ROW_NUMBER() OVER(
                    PARTITION BY
                    time_ms,
                    datasource,
                    account_id,
                    event_name
                    ) AS rk
            FROM rs_get_json_object
        ) AS rs_rank
    WHERE rk=1
)

-- 将最终结果放入 OmniSDK 订单创建事实表( dw_omni_sdk.dwd_fact_omni_sdk_order_create_di )中
INSERT OVERWRITE TABLE dw_omni_sdk.dwd_fact_omni_sdk_order_create_di PARTITION (dt)
SELECT
    time_ms,
    service_group,
    datasource,
    game_id,
    msg_version,
    sdk_version,
    channel,
    device_id,
    account_id,
    host,
    os,
    os_version,
    vendor,
    device_model,
    event_group,
    event_name,
    another_device_id,
    ip,
    order_id,
    amount,
    notify_url,
    role_id,
    currency_code,
    ios,
    android,
    desktop,
    mobile,
    smarttv,
    tablet,
    country,
    city,
    country_region_name,
    latitude,
    longitude,
    time_zone,
    http_version,
    dt
FROM  rs_get_rank;

</#list>
